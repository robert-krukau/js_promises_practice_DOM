{"version":3,"sources":["scripts/main.js"],"names":["body","document","querySelector","notification","type","text","message","createElement","append","className","setAttribute","innerText","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","eveent","preventDefault","thirdPromise","leftButt","rightButt","e","button","then"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,QAE9BC,EAAe,SAACC,EAAMC,GACpBC,IAAAA,EAAUL,SAASM,cAAc,OAEvCP,EAAKQ,OAAOF,GACZA,EAAQG,UAAeL,GAAAA,OAAAA,GACvBE,EAAQI,aAAa,UAAW,gBAChCJ,EAAQK,UAAeN,GAAAA,OAAAA,IAGnBO,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCf,EAAKgB,iBAAiB,QAAS,WAC7BF,EAAQ,gCAGVG,WAAW,WAAMF,OAAAA,EAAOG,MAAM,gCAAgC,OAG1DC,EAAgB,IAAIN,QAAQ,SAACC,GACjCd,EAAKgB,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVd,EAAKgB,iBAAiB,cAAe,SAACI,GACpCA,EAAOC,iBAEPP,EAAQ,mCAINQ,EAAe,IAAIT,QAAQ,SAACC,GAC5BS,IAAAA,GAAW,EACXC,GAAY,EAEhBxB,EAAKgB,iBAAiB,YAAa,SAACS,GAC1BA,OAAAA,EAAEC,QACH,KAAA,EACHH,GAAW,EACX,MAEG,KAAA,EACHC,GAAY,EAIZD,GAAYC,GACdV,EAAQ,kCAKdF,EACGe,KACC,SAAAb,GAAWX,OAAAA,EAAwBW,UAAAA,IACnC,SAAAC,GAAUZ,OAAAA,EAAwBY,UAAAA,KAGtCI,EACGQ,KACC,SAAAb,GAAWX,OAAAA,EAAwBW,UAAAA,KAGvCQ,EAAaK,KAAK,SAAAb,GAAWX,OAAAA,EAAwBW,UAAAA","file":"main.0215a868.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.querySelector('body');\n\nconst notification = (type, text) => {\n  const message = document.createElement('div');\n\n  body.append(message);\n  message.className = `${type}`;\n  message.setAttribute('data-qa', 'notification');\n  message.innerText = `${text}`;\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => reject(Error('First promise was rejected')), 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', (eveent) => {\n    eveent.preventDefault();\n\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftButt = false;\n  let rightButt = false;\n\n  body.addEventListener('mousedown', (e) => {\n    switch (e.button) {\n      case 0:\n        leftButt = true;\n        break;\n\n      case 2:\n        rightButt = true;\n        break;\n    }\n\n    if (leftButt && rightButt) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then(\n    resolve => notification(`success`, resolve),\n    reject => notification(`warning`, reject)\n  );\n\nsecondPromise\n  .then(\n    resolve => notification(`success`, resolve)\n  );\n\nthirdPromise.then(resolve => notification(`success`, resolve));\n"]}